# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          #
          # ========================固件定制部分========================
          #
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
					CONFIG_TARGET_x86_64_DEVICE_generic=y
				  CONFIG_PACKAGE_6in4=y
					# CONFIG_PACKAGE_automount is not set
					# CONFIG_PACKAGE_autosamba is not set
					CONFIG_PACKAGE_boost=y
					CONFIG_PACKAGE_boost-date_time=y
					CONFIG_PACKAGE_boost-program_options=y
					CONFIG_PACKAGE_boost-system=y
					CONFIG_PACKAGE_ca-certificates=y
					CONFIG_PACKAGE_dnsforwarder=y
					CONFIG_PACKAGE_dnsproxy=y
					CONFIG_PACKAGE_ip6tables=y
					CONFIG_PACKAGE_ipt2socks=y
					# CONFIG_PACKAGE_iptables-mod-ipsec is not set
					CONFIG_PACKAGE_ipv6helper=y
					CONFIG_PACKAGE_kcptun-client=y
					CONFIG_PACKAGE_kcptun-config=y
					# CONFIG_PACKAGE_kmod-crypto-cbc is not set
					# CONFIG_PACKAGE_kmod-crypto-deflate is not set
					# CONFIG_PACKAGE_kmod-crypto-des is not set
					# CONFIG_PACKAGE_kmod-crypto-echainiv is not set
					CONFIG_PACKAGE_kmod-crypto-kpp=y
					CONFIG_PACKAGE_kmod-crypto-lib-blake2s=y
					CONFIG_PACKAGE_kmod-crypto-lib-chacha20=y
					CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=y
					CONFIG_PACKAGE_kmod-crypto-lib-curve25519=y
					CONFIG_PACKAGE_kmod-crypto-lib-poly1305=y
					# CONFIG_PACKAGE_kmod-crypto-md5 is not set
					# CONFIG_PACKAGE_kmod-ipsec is not set
					# CONFIG_PACKAGE_kmod-ipt-ipsec is not set
					CONFIG_PACKAGE_kmod-ipt-nat6=y
					CONFIG_PACKAGE_kmod-iptunnel=y
					# CONFIG_PACKAGE_kmod-iptunnel6 is not set
					CONFIG_PACKAGE_kmod-nf-nat6=y
					CONFIG_PACKAGE_kmod-sit=y
					CONFIG_PACKAGE_kmod-udptunnel4=y
					CONFIG_PACKAGE_kmod-udptunnel6=y
					CONFIG_PACKAGE_kmod-wireguard=y
					CONFIG_PACKAGE_libatomic=y
					CONFIG_PACKAGE_libcap=y
					CONFIG_PACKAGE_libevent2=y
					# CONFIG_PACKAGE_libgmp is not set
					CONFIG_PACKAGE_libustream-wolfssl=y
					CONFIG_PACKAGE_libuv=y
					CONFIG_PACKAGE_libwebsockets-full=y
					CONFIG_PACKAGE_libwolfssl=m
					# CONFIG_PACKAGE_luci-app-accesscontrol is not set
					# CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs is not set
					# CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk is not set
					# CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
					# CONFIG_PACKAGE_luci-app-qbittorrent is not set
					# CONFIG_PACKAGE_luci-app-rclone_INCLUDE_fuse-utils is not set
					# CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
					# CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
					# CONFIG_PACKAGE_luci-app-samba is not set
					CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
					CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_NaiveProxy=y
					CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=y
					CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Rust_Client=y
					CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Rust_Server=y
					CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
					CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_Plugin=y
					CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_libustream-wolfssl=y
					CONFIG_PACKAGE_luci-app-ttyd=y
					CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSFORWARDER=y
					CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSPROXY=y
					# CONFIG_PACKAGE_luci-app-vsftpd is not set
					CONFIG_PACKAGE_luci-app-wireguard=y
					# CONFIG_PACKAGE_luci-app-xlnetacc is not set
					CONFIG_PACKAGE_luci-i18n-ttyd-zh-cn=y
					CONFIG_PACKAGE_luci-i18n-wireguard-zh-cn=y
					CONFIG_PACKAGE_luci-proto-ipv6=y
					CONFIG_PACKAGE_luci-proto-wireguard=y
					CONFIG_PACKAGE_naiveproxy=y
					CONFIG_PACKAGE_nano=y
					CONFIG_PACKAGE_odhcp6c=y
					CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
					CONFIG_PACKAGE_odhcpd-ipv6only=y
					CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
					# CONFIG_PACKAGE_qBittorrent-static is not set
					CONFIG_PACKAGE_redsocks2=y
					CONFIG_PACKAGE_shadowsocks-rust-sslocal=y
					CONFIG_PACKAGE_shadowsocks-rust-ssserver=y
					# CONFIG_PACKAGE_strongswan is not set
					CONFIG_PACKAGE_trojan=y
					CONFIG_PACKAGE_ttyd=y
					CONFIG_PACKAGE_v2ray-plugin=y
					# CONFIG_PACKAGE_vsftpd-alt is not set
					CONFIG_PACKAGE_wireguard-tools=y
					CONFIG_WOLFSSL_HAS_AES_CCM=y
					CONFIG_WOLFSSL_HAS_ARC4=y
					CONFIG_WOLFSSL_HAS_CERTGEN=y
					CONFIG_WOLFSSL_HAS_CHACHA_POLY=y
					CONFIG_WOLFSSL_HAS_DH=y
					CONFIG_WOLFSSL_HAS_NO_HW=y
					CONFIG_WOLFSSL_HAS_OCSP=y
					CONFIG_WOLFSSL_HAS_SESSION_TICKET=y
					CONFIG_WOLFSSL_HAS_TLSV10=y
					CONFIG_WOLFSSL_HAS_TLSV13=y
					CONFIG_WOLFSSL_HAS_WPAS=y
					CONFIG_boost-compile-visibility-hidden=y
					CONFIG_boost-runtime-shared=y
					CONFIG_boost-static-and-shared-libs=y
					CONFIG_boost-variant-release=y
					CONFIG_v2ray-plugin_INCLUDE_GOPROXY=y
					CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1
					CONFIG_PACKAGE_antfs-mount=y
					CONFIG_PACKAGE_kmod-fs-antfs=y
					CONFIG_PACKAGE_kmod-fs-exfat=y
					CONFIG_PACKAGE_kmod-fs-ext4=y
					CONFIG_PACKAGE_kmod-lib-crc16=y
					CONFIG_PACKAGE_kmod-scsi-core=y
					CONFIG_PACKAGE_kmod-usb-storage=y
					CONFIG_PACKAGE_kmod-usb-storage-extras=y
					CONFIG_PACKAGE_kmod-usb-storage-uas=y
					CONFIG_PACKAGE_samba36-server=y
					CONFIG_PACKAGE_wsdd2=y
          #
          # ========================固件定制部分结束========================
          #
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          sed -i "2i # network config" ./package/lean/default-settings/files/zzz-default-settings
          # 默认 IP 地址，旁路由时不会和主路由的 192.168.1.1 冲突
          sed -i "3i uci set network.lan.ipaddr='192.168.199.1'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "4i uci set network.lan.proto='static'" ./package/lean/default-settings/files/zzz-default-settings # 静态 IP
          sed -i "5i uci set network.lan.type='bridge'" ./package/lean/default-settings/files/zzz-default-settings  # 接口类型：桥接
          sed -i "6i uci set network.lan.ifname='eth0'" ./package/lean/default-settings/files/zzz-default-settings  # 网络端口：默认 eth0，第一个接口
          sed -i "7i uci set network.lan.netmask='255.255.255.0'" ./package/lean/default-settings/files/zzz-default-settings    # 子网掩码
          sed -i "8i uci set network.lan.gateway='192.168.199.1'" ./package/lean/default-settings/files/zzz-default-settings  # 默认网关地址（主路由 IP）
          sed -i "9i uci set network.lan.dns='192.168.199.1'" ./package/lean/default-settings/files/zzz-default-settings  # 默认上游 DNS 地址
          sed -i "10i uci commit network\n" ./package/lean/default-settings/files/zzz-default-settings

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
